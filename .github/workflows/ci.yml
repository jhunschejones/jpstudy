# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env: # shared for all steps
      RAILS_ENV: test
      PRIMARY_KEY: ${{ secrets.PRIMARY_KEY }}
      DETERMINISTIC_KEY: ${{ secrets.DETERMINISTIC_KEY }}
      KEY_DERIVATION_SALT: ${{ secrets.KEY_DERIVATION_SALT }}
      SQUARE_ACCESS_TOKEN: ${{ secrets.SQUARE_ACCESS_TOKEN }}
      MESSAGE_ENCRYPTION_KEY: ${{ secrets.MESSAGE_ENCRYPTION_KEY }}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0.3'
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Install dependent libraries for postgres
      run: sudo apt-get install libpq-dev
    - name: Setup Database
      run: bundle exec rails db:create db:migrate
    - name: Run unit tests
      run: bundle exec rails test

    # === Everything below here is for the system tests ===
    - name: Install missing fonts # required for showing Knanji characters during system tests
      run: sudo apt-get install fonts-ipafont-mincho fonts-ipafont-gothic
    - name: Install ChromeDriver
      uses: nanasess/setup-chromedriver@master
    - name: Start ChromeDriver
      run: |
        export DISPLAY=:99
        chromedriver --url-base=/wd/hub &
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
    - name: Run system tests
      run: bundle exec rails test:system
      continue-on-error: true # so it begins...
    - name: Save failed test screenshots
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-screenshots
        path: /home/runner/work/jpstudy/jpstudy/tmp/screenshots/*.png
